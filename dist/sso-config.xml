<?xml version="1.0" encoding="UTF-8"?>
<config>
	<!-- Do you want to allow HTTP BASIC auth on this filter? -->
	<httpbasic>
		<allow>true</allow>
	</httpbasic>
	<!-- mode can be 'old' or 'new' this defines if the SSOClientFilter should use 
		the old WarwickSSO cookie or the newer SSO-SSC-* cookies -->
	<mode>new</mode>
	<origin>
		<!-- This is the id of the SSO origin, this might change when the service goes live -->
		<originid>urn:mace:eduserv.org.uk:athens:provider:warwick.ac.uk</originid>
		<login>
			<!-- url of the login page, should always be HTTPS -->
			<location>https://websignon.warwick.ac.uk/origin/hs</location>
		</login>
		<logout>
			<!-- url of the logout page, should always be HTTPS -->
			<location>https://websignon.warwick.ac.uk/origin/logout</location>
		</logout>
		<attributeauthority>
			<!-- url of the Attribute Authority -->
			<location>https://websignon.warwick.ac.uk/origin/aa</location>
		</attributeauthority>
	</origin>
	<shire>
		<!-- This is the key that the filter will put the User object under in the request
			You should be able to get a user with request.getAttribute("SSO_USER") -->
		<filteruserkey>SSO_USER</filteruserkey>
		<!-- To get redirects working properly, pages need to know where to redirect back to after login 
			This is the request parameter key that contains the real url of the webpage, it is used to generate
			correct redirects. -->
		<urlparamkey>requestedUrl</urlparamkey>
		<!-- if there are some rewrites which are done internally to apache where querystring parameters are added 
			and you don't want them showing up after a redirect, add in the parameter names here and they will be stripped -->
		<stripparams>
			<key>test</key>
			<key>test2</key>
		</stripparams>
		<!-- location of this services SHIRE, should be HTTPS...as mapped in the web.xml -->
		<location>https://myapp.warwick.ac.uk/myapp/shire</location>
		<sscookie>
			<!-- Name of the service specific cookie (SSC) that will be used for keeping a session -->
			<name>SSO-SSC-MyApp</name>
			<!-- path scope of this cookie -->
			<path>/myapp</path>
			<!-- domain scope of this cookie...should be as restrictive as possible -->
			<domain>myapp.warwick.ac.uk</domain>
			<samesite>Lax</samesite>
		</sscookie>
		<!-- provider id, as assigned by single sign on -->
		<providerid>urn:myapp.warwick.ac.uk:myapp:service</providerid>
		<keystore>
			<!-- location of the java keystore -->
			<location>file:/apps/jboss/server/default/conf/myapp.warwick.ac.uk.keystore</location>
			<!-- password for that keystore -->
			<password>changeit</password>
			<shire-alias>myapp.warwick.ac.uk</shire-alias>
		</keystore>
	</shire>
	<logout>
		<location>http://myapp.warwick.ac.uk/myapp/logout</location>
	</logout>
	<cacertskeystore>
			<location>file:/j2sdk1.4.2_02/jre/lib/security/cacerts</location>
			<password>changeit</password>
	</cacertskeystore>
</config>