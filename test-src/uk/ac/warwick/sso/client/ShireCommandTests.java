/*
 * Created on 07-Jun-2005
 *
 */
package uk.ac.warwick.sso.client;

import java.net.URLDecoder;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.Cookie;

import org.apache.commons.configuration.Configuration;
import org.apache.commons.configuration.XMLConfiguration;
import org.opensaml.SAMLAssertion;
import org.opensaml.SAMLAttribute;
import org.opensaml.SAMLAttributeStatement;
import org.opensaml.SAMLException;
import org.opensaml.SAMLResponse;

import uk.ac.warwick.sso.client.cache.UserCache;

import junit.framework.TestCase;

public class ShireCommandTests extends TestCase {

	public final void testShireCommand() throws Exception {

		ShireCommand command = new ShireCommand();

		Configuration config = new XMLConfiguration(getClass().getResource("/sso-config.xml"));

		MockAttributeAuthorityResponseFetcher fetcher = new MockAttributeAuthorityResponseFetcher();
		fetcher.setConfig(config);

		SAMLResponse resp = generateMockResponse();
		fetcher.setResponse(resp);
		command.setAaFetcher(fetcher);

		String saml64 = "PFJlc3BvbnNlIHhtbG5zPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoxLjA6cHJvdG9jb2wiIHht%0D%0AbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjEuMDphc3NlcnRpb24iIHhtbG5zOnNh%0D%0AbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoxLjA6cHJvdG9jb2wiIElzc3VlSW5zdGFudD0i%0D%0AMjAwNS0wNi0wN1QxMDoxOTozNy40MDlaIiBNYWpvclZlcnNpb249IjEiIE1pbm9yVmVyc2lvbj0i%0D%0AMSIgUmVjaXBpZW50PSJodHRwOi8vbW9sZW1hbi53YXJ3aWNrLmFjLnVrL2Jsb2didWlsZGVyL3No%0D%0AaXJlIiBSZXNwb25zZUlEPSJlNzJmZDM4YWYzYjU4NTM1YjQ4NTk3NWNhZGExZjU3ZiI%2BPGRzOlNp%0D%0AZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI%2BCjxk%0D%0AczpTaWduZWRJbmZvPgo8ZHM6Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6%0D%0ALy93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyI%2BPC9kczpDYW5vbmljYWxpemF0aW9u%0D%0ATWV0aG9kPgo8ZHM6U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcv%0D%0AMjAwMC8wOS94bWxkc2lnI3JzYS1zaGExIj48L2RzOlNpZ25hdHVyZU1ldGhvZD4KPGRzOlJlZmVy%0D%0AZW5jZSBVUkk9IiNlNzJmZDM4YWYzYjU4NTM1YjQ4NTk3NWNhZGExZjU3ZiI%2BCjxkczpUcmFuc2Zv%0D%0Acm1zPgo8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94%0D%0AbWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiPjwvZHM6VHJhbnNmb3JtPgo8ZHM6VHJhbnNmb3Jt%0D%0AIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIj48ZWM6%0D%0ASW5jbHVzaXZlTmFtZXNwYWNlcyB4bWxuczplYz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94%0D%0AbWwtZXhjLWMxNG4jIiBQcmVmaXhMaXN0PSJjb2RlIGRzIGtpbmQgcncgc2FtbCBzYW1scCB0eXBl%0D%0AbnMgI2RlZmF1bHQiPjwvZWM6SW5jbHVzaXZlTmFtZXNwYWNlcz48L2RzOlRyYW5zZm9ybT4KPC9k%0D%0AczpUcmFuc2Zvcm1zPgo8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5v%0D%0AcmcvMjAwMC8wOS94bWxkc2lnI3NoYTEiPjwvZHM6RGlnZXN0TWV0aG9kPgo8ZHM6RGlnZXN0VmFs%0D%0AdWU%2BcFdOUFRjSDY4aU9kUmhFeDVISUxLbnZqT1hvPTwvZHM6RGlnZXN0VmFsdWU%2BCjwvZHM6UmVm%0D%0AZXJlbmNlPgo8L2RzOlNpZ25lZEluZm8%2BCjxkczpTaWduYXR1cmVWYWx1ZT4KRGNFdnhzY0tRZUlO%0D%0ARTR5QVZPYVU4eExVUVNLc2x0RkVuZGVVWldDVDhNdldGRXk4TjRLekJENUMvUTMwaHBiOUdvUHpx%0D%0AZUc1T0tyTApxbW9FK2dWamREU1BWTU4yRFRTUG41WTdYa0ZPZk9sdm1zd2N2c2ZsQkJmc3c0TjZI%0D%0AcjY2VE5zcHlYZHYzeXhWSnkrMllMQnZFMlhSCnd0UTVaVFJNbDFmVUlBMkR3MW89CjwvZHM6U2ln%0D%0AbmF0dXJlVmFsdWU%2BCjxkczpLZXlJbmZvPgo8ZHM6WDUwOURhdGE%2BCjxkczpYNTA5Q2VydGlmaWNh%0D%0AdGU%2BCk1JSURBekNDQWV1Z0F3SUJBZ0lCQXpBTkJna3Foa2lHOXcwQkFRUUZBRENCaERFVE1CRUdB%0D%0AMVVFQXhNS1ZHVnpkRk5UVHlCRFFURVcKTUJRR0ExVUVDQk1OVjJWemRDQk5hV1JzWVc1a2N6RUxN%0D%0AQWtHQTFVRUJoTUNSMEl4S0RBbUJna3Foa2lHOXcwQkNRRVdHV3RwWlhKaApiaTV6YUdGM1FIZGhj%0D%0AbmRwWTJzdVlXTXVkV3N4SGpBY0JnTlZCQW9URlZWdWFYWmxjbk5wZEhrZ2IyWWdWMkZ5ZDJsamF6%0D%0AQWVGdzB3Ck5UQTFNall4TkRFMk16VmFGdzB3TmpBMU1qWXhOREUyTXpWYU1Ic3hIakFjQmdOVkJB%0D%0ATVRGVzF2YkdWdFlXNHVkMkZ5ZDJsamF5NWgKWXk1MWF6RVdNQlFHQTFVRUNCTU5WMlZ6ZENCTmFX%0D%0AUnNZVzVrY3pFTE1Ba0dBMVVFQmhNQ1IwSXhIakFjQmdOVkJBb1RGVlZ1YVhabApjbk5wZEhrZ2Iy%0D%0AWWdWMkZ5ZDJsamF6RVVNQklHQTFVRUN4TUxTVlFnVTJWeWRtbGpaWE13Z1o0d0RRWUpLb1pJaHZj%0D%0ATkFRRUJCUUFECmdZd0FNSUdJQW9HQWVYd21IYSt0Y21xdFBjc2ZkQVFLS0tCRllsWE9CYndKTFdz%0D%0ASDFiU0M1eERxakFpRkdiaWVidllDbkprM2EwT3IKem05cStDcFlRYnJRNHFZajlPS0dFcUNpNk9P%0D%0AOEd3SFEydHBucm9nMEJveXdwU00wNnhZenZwTzYzdUJTZlhWM3ZjTDVGOWFMSE9sSwpKaVFjWjlx%0D%0AUzB5UjZ4T0FhTXdNSS96SHpOOGVWd0RrQ0F3RUFBYU1OTUFzd0NRWURWUjBUQkFJd0FEQU5CZ2tx%0D%0AaGtpRzl3MEJBUVFGCkFBT0NBUUVBRHlXWXBSMmY5ZDlMajh4SHphdkRqVExMY2hHUkFDMy9kTm5v%0D%0ASWJ4dFo0ZU9ZOTlOS21KT2krVnNxKy9lNG41Z2tocWoKekdyZFRBSDNMMUlOOW90OUFVa0hjU25y%0D%0ANTJIRXVRZmVmcFp2b2t3R0hwRUZFcjBSZU4xS2NhM2FmRzJmc0tMUzNST3pKRDRMa1YrdApVbmcw%0D%0AZ0lLWkRDRmlERVJGeUdmUzc1LzRRSHh0c2oxWlJVTCtROTdPSk9UdmtaS1JDVTRqUjRueTlLUjI4%0D%0AWVdZclBwNzUrRHRIYWRqCnAwVFhKU3BDdWVJNk54aURMaVpSdDVGcHhVbWFXZ2xpd0djQlNmSnlr%0D%0AVFRLSmI2RTRMUkQ2ZC9BY29zOHZyUHFlT01YYTZKZ1hlc3AKOEpqcDNlUFBQK21VYVpNbzFIUTli%0D%0AQ0ZGTFdwYnZkeWVqQVB0Y3RldWRtbkxlQT09CjwvZHM6WDUwOUNlcnRpZmljYXRlPgo8L2RzOlg1%0D%0AMDlEYXRhPgo8L2RzOktleUluZm8%2BPC9kczpTaWduYXR1cmU%2BPFN0YXR1cz48U3RhdHVzQ29kZSBW%0D%0AYWx1ZT0ic2FtbHA6U3VjY2VzcyI%2BPC9TdGF0dXNDb2RlPjwvU3RhdHVzPjxBc3NlcnRpb24geG1s%0D%0AbnM9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjEuMDphc3NlcnRpb24iIEFzc2VydGlvbklEPSJk%0D%0AMTcyYjEwNTVkZjNmNGFiOTZjZGQ0MzQ5NzFjYTMxMCIgSXNzdWVJbnN0YW50PSIyMDA1LTA2LTA3%0D%0AVDEwOjE5OjM3LjQwOVoiIElzc3Vlcj0idXJuOmF0aGVuc2Ftcy5uZXQ6dGVzdEZlZGVyYXRpb246%0D%0AbW9sZW1hbi53YXJ3aWNrLmFjLnVrIiBNYWpvclZlcnNpb249IjEiIE1pbm9yVmVyc2lvbj0iMSI%2B%0D%0APENvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDA1LTA2LTA3VDEwOjE5OjM3LjQwOVoiIE5vdE9uT3JB%0D%0AZnRlcj0iMjAwNS0wNi0wN1QxMDoyNDozNy40MDlaIj48QXVkaWVuY2VSZXN0cmljdGlvbkNvbmRp%0D%0AdGlvbj48QXVkaWVuY2U%2BdXJuOm1vbGVtYW4ud2Fyd2ljay5hYy51azpibG9nYnVpbGRlcjpzZXJ2%0D%0AaWNlPC9BdWRpZW5jZT48L0F1ZGllbmNlUmVzdHJpY3Rpb25Db25kaXRpb24%2BPC9Db25kaXRpb25z%0D%0APjxBdXRoZW50aWNhdGlvblN0YXRlbWVudCBBdXRoZW50aWNhdGlvbkluc3RhbnQ9IjIwMDUtMDYt%0D%0AMDdUMTA6MTk6MzcuNDA5WiIgQXV0aGVudGljYXRpb25NZXRob2Q9InVybjpvYXNpczpuYW1lczp0%0D%0AYzpTQU1MOjEuMDphbTp1bnNwZWNpZmllZCI%2BPFN1YmplY3Q%2BPE5hbWVJZGVudGlmaWVyIEZvcm1h%0D%0AdD0idXJuOndlYnNpZ25vbjp1dWlkIiBOYW1lUXVhbGlmaWVyPSJ1cm46YXRoZW5zYW1zLm5ldDp0%0D%0AZXN0RmVkZXJhdGlvbjptb2xlbWFuLndhcndpY2suYWMudWsiPmdiZmNvdGdvdm15c3FobG9zb3Jv%0D%0AaWV2eGJhamF2b2tyY3RuZXBraXlqcmRjamxmZHVwPC9OYW1lSWRlbnRpZmllcj48U3ViamVjdENv%0D%0AbmZpcm1hdGlvbj48Q29uZmlybWF0aW9uTWV0aG9kPnVybjpvYXNpczpuYW1lczp0YzpTQU1MOjEu%0D%0AMDpjbTpiZWFyZXI8L0NvbmZpcm1hdGlvbk1ldGhvZD48L1N1YmplY3RDb25maXJtYXRpb24%2BPC9T%0D%0AdWJqZWN0PjxTdWJqZWN0TG9jYWxpdHkgSVBBZGRyZXNzPSIxMzcuMjA1LjE5NC4yMTMiPjwvU3Vi%0D%0AamVjdExvY2FsaXR5PjwvQXV0aGVudGljYXRpb25TdGF0ZW1lbnQ%2BPC9Bc3NlcnRpb24%2BPC9SZXNw%0D%0Ab25zZT4%3D";
		String target = "http%3A%2F%2Fmoleman.warwick.ac.uk%2Fblogbuilder%2Fkieranshaw%2F";

		saml64 = URLDecoder.decode(saml64, "UTF-8");
		target = URLDecoder.decode(target, "UTF-8");

		command.setConfig(config);
		command.setCache(new UserCache());
		Cookie cookie = command.process(saml64, target);

		assertNotNull(cookie);
		
		assertEquals("Should have right cookie","SSC_VALUE",cookie.getValue());

	}

	/**
	 * @return
	 * @throws SAMLException
	 */
	private SAMLResponse generateMockResponse() throws SAMLException {
		SAMLResponse resp = new SAMLResponse();
		SAMLAssertion assertion = new SAMLAssertion();
		SAMLAttributeStatement statement = new SAMLAttributeStatement();
		List values = new ArrayList();
		values.add("SSC_VALUE");
		SAMLAttribute attr = new SAMLAttribute("urn:websignon:ssc",null,null,0,values);
		statement.addAttribute(attr);
		assertion.addStatement(statement);
		resp.addAssertion(assertion);
		return resp;
	}

}
